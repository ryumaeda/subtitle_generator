{
  "key": "systemAbstraction",
  "value": {
    "designRules": "1. カラーパレット：\n   - プライマリカラー：#4A90E2（青）\n   - セカンダリカラー：#50E3C2（ターコイズ）\n   - アクセントカラー：#F5A623（オレンジ）\n   - 背景色：#F8F8F8（薄いグレー）\n   - テキスト色：#333333（濃いグレー）\n\n2. フォント：\n   - ヘッダー：Noto Sans JP Bold\n   - 本文：Noto Sans JP Regular\n   - サイズ：16px（基本）、24px（大見出し）、20px（小見出し）\n\n3. レイアウト：\n   - レスポンシブデザインを採用し、モバイルファーストの設計\n   - グリッドシステムを使用し、一貫性のあるレイアウトを維持\n\n4. UI要素：\n   - ボタン：角丸四角形、ホバー時に軽い陰影効果\n   - 入力フォーム：シンプルな外枠、フォーカス時に強調表示\n   - アイコン：Material Design Iconsを使用\n\n5. アニメーション：\n   - 控えめで自然な動きを心がける\n   - ページ遷移時のフェードイン/アウト効果\n\n6. アクセシビリティ：\n   - コントラスト比は4.5:1以上を維持\n   - フォーカス可能な要素は視覚的にも明確に\n\n7. 全体的な印象：\n   - クリーンでモダンなデザイン\n   - 機能性を重視しつつ、使いやすさと見やすさを両立",
    "codingRules": "1. 命名規則：\n   - 変数名・関数名：キャメルケース（例：getUserData）\n   - クラス名：パスカルケース（例：UserManager）\n   - 定数：大文字スネークケース（例：MAX_FILE_SIZE）\n\n2. インデント：\n   - スペース4つを使用\n\n3. コードの可読性：\n   - 関数は単一責任の原則に従い、一つの機能のみを持つ\n   - コメントは必要最小限に抑え、コード自体が説明的になるよう心がける\n   - 複雑なロジックには簡潔な説明コメントを付ける\n\n4. エラーハンドリング：\n   - try-catch文を適切に使用し、エラーメッセージは具体的で理解しやすいものにする\n   - ユーザーに表示するエラーメッセージと開発者向けのログは区別する\n\n5. コード構造：\n   - モジュール化を徹底し、再利用可能なコンポーネントを作成する\n   - ビジネスロジックとUI関連のコードは分離する\n\n6. バージョン管理：\n   - Gitを使用し、機能ごとにブランチを作成する\n   - コミットメッセージは明確で簡潔にする",
    "systemAbstraction": "本システムは動画字幕生成に特化したWebアプリケーションです。主な機能は以下の通りです：\n\n1. Googleアカウントによるログイン機能\n2. 動画ファイルのアップロード機能\n3. 音声からテキストへの自動変換機能\n4. 機械学習を活用した要点抽出字幕生成機能\n5. 話者識別による自動フォント/色分け機能\n6. 字幕デザインのカスタマイズ機能\n7. Final Cut ProやPremiere Pro用プロジェクトファイルの出力機能\n8. フィルタリング機能による不要な字幕の除外\n9. 学習データの追加機能\n\nシステムはフロントエンドとバックエンドで構成され、データベースにはSupabaseを使用します。ユーザーごとのアカウント管理を行い、フィルター設定や字幕フォント、学習用動画データを保存します。画面構成は主に字幕生成変換画面と動画学習画面から成り、タブやハンバーガーメニューで遷移します。"
  }
}
